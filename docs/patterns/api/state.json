{"docs":{"id":"root","children":[{"id":"docs/my-virtual-folder","contents":"---\noptions:\n  query: tags=world\n---\n\n# My Virtual Folder\n","contentType":"doc","path":"docs/my-virtual-folder.md","manifest":{"name":"my-virtual-folder","displayName":"My Virtual Folder","description":"","flag":"alpha","options":{"query":"tags=world"},"tags":[],"version":"1.0.0"},"rawManifest":{"options":{"query":"tags=world"}}},{"id":"README","contents":"---\ndisplayName: \"my-patternplate\"\ntags:\n  - hello\n  - welcome\n---\n\n# You did it! :dog:\n\nYou successfully installed and started patternplate.\n\nHead back to the [Getting Started Guide](https://patternplate.github.io/doc/docs/guides/getting-started#up-next) for further instructions.\n\n## Up next\n\n* [Guide: Build a component](https://patternplate.github.io/doc/docs/guides/add-component)\n\n\n## Related topics\n\n* [CLI](https://patternplate.github.io/doc/docs/reference/cli)\n\n## My first code block\n```js\nconst React = require(\"react\");\nconst {ComponentList} = require(\"@patternplate/widgets\");\n\nmodule.exports = () => {\n  return (\n    <ComponentList query=\"hello\"/>\n  );\n};\n```\n\n## My first widget\n```widget\nconst React = require(\"react\");\nconst {ComponentList} = require(\"@patternplate/widgets\");\n\nmodule.exports = () => {\n  return (\n    <ComponentList query=\"is=pattern\"/>\n  );\n};\n```\n\n## My second widget\n```widget\nconst React = require(\"react\");\nconst {ComponentDemo} = require(\"@patternplate/widgets\");\n\nmodule.exports = () => {\n  return (\n    <ComponentDemo id=\"hello-world\"/>\n  );\n};\n```\n","contentType":"doc","path":"README.md","manifest":{"name":"you-did-it---dog-","displayName":"my-patternplate","description":"","flag":"alpha","options":{},"tags":["hello","welcome"],"version":"1.0.0"},"rawManifest":{"displayName":"my-patternplate","tags":["hello","welcome"]}}],"type":"root"},"meta":{"id":"root","children":[{"id":"button","artifact":"lib/button/demo.js","contents":"## Code\n```html\n<button class=\"cta-button\">My first button</button>\n```\n\n## Questions\n- Can I nest different states of a button, different types of buttons, etc, under the button component?\n","contentType":"pattern","source":"lib/button/demo.js","files":["lib/button/demo.js","lib/button/readme.md"],"path":"lib/button/package.json","manifest":{"displayName":"CTA Button","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"name":"button","description":"","tags":["button","cta","interaction"]},"rawManifest":{"name":"button","displayName":"CTA Button","description":"","flag":"","options":{},"tags":["button","cta","interaction"],"version":"1.0.0"},"errors":[]},{"id":"text","artifact":"lib/text/demo.js","contents":"## Code\n```html\n<p class=\"medium-text\">\n\n</p>\n```\n\n## Behaviour\n\nClicking on a the text will count up from 1\n","contentType":"pattern","source":"lib/text/demo.js","files":["lib/text/demo.js","lib/text/readme.md"],"path":"lib/text/package.json","manifest":{"displayName":"Medium Text","version":"1.0.0","build":true,"display":true,"flag":"alpha","options":{},"name":"text","description":"","tags":["text","paragraph","copy","medium"]},"rawManifest":{"name":"text","displayName":"Medium Text","description":"","flag":"","options":{},"tags":["text","paragraph","copy","medium"],"version":"1.0.0"},"errors":[]}]}}